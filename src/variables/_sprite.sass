// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$img1-name: 'img1'
$img1-x: 260px
$img1-y: 0px
$img1-offset-x: -260px
$img1-offset-y: 0px
$img1-width: 250px
$img1-height: 124px
$img1-total-width: 510px
$img1-total-height: 191px
$img1-image: 'sprite.png'
$img1: (260px, 0px, -260px, 0px, 250px, 124px, 510px, 191px, 'sprite.png', 'img1', )
$img2-name: 'img2'
$img2-x: 0px
$img2-y: 0px
$img2-offset-x: 0px
$img2-offset-y: 0px
$img2-width: 250px
$img2-height: 125px
$img2-total-width: 510px
$img2-total-height: 191px
$img2-image: 'sprite.png'
$img2: (0px, 0px, 0px, 0px, 250px, 125px, 510px, 191px, 'sprite.png', 'img2', )
$logo-name: 'logo'
$logo-x: 0px
$logo-y: 135px
$logo-offset-x: 0px
$logo-offset-y: -135px
$logo-width: 56px
$logo-height: 56px
$logo-total-width: 510px
$logo-total-height: 191px
$logo-image: 'sprite.png'
$logo: (0px, 135px, 0px, -135px, 56px, 56px, 510px, 191px, 'sprite.png', 'logo', )
$spritesheet-width: 510px
$spritesheet-height: 191px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($img1, $img2, $logo, )
$spritesheet: (510px, 191px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
